/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */



using RosSharp.RosBridgeClient.MessageTypes.Std;

namespace RosSharp.RosBridgeClient.MessageTypes.Pr2GripperSensor
{
    public class PR2GripperSensorRawData : Message
    {
        public const string RosMessageName = "pr2_gripper_sensor_msgs/PR2GripperSensorRawData";

        //  NOTE: This message is only for debugging purposes. It is not intended for API usage - and is not published under release code.
        //  Standard ROS header
        public Time stamp { get; set; }
        //  corrected for zero contact
        public double left_finger_pad_force { get; set; }
        public double right_finger_pad_force { get; set; }
        //  filtered values : high pass filter at 5 Hz after correcting for zero contact
        public double left_finger_pad_force_filtered { get; set; }
        public double right_finger_pad_force_filtered { get; set; }
        //  corrected for zero contact
        public double[] left_finger_pad_forces { get; set; }
        public double[] right_finger_pad_forces { get; set; }
        //  filtered values : high pass filter at 5 Hz after correcting for zero contact
        public double[] left_finger_pad_forces_filtered { get; set; }
        public double[] right_finger_pad_forces_filtered { get; set; }
        //  raw acceleration values
        public double acc_x_raw { get; set; }
        public double acc_y_raw { get; set; }
        public double acc_z_raw { get; set; }
        //  filtered acceleration values
        public double acc_x_filtered { get; set; }
        public double acc_y_filtered { get; set; }
        public double acc_z_filtered { get; set; }
        //  boolean variables indicating whether contact exists or not
        public bool left_contact { get; set; }
        public bool right_contact { get; set; }

        public PR2GripperSensorRawData()
        {
            this.stamp = new Time();
            this.left_finger_pad_force = 0.0;
            this.right_finger_pad_force = 0.0;
            this.left_finger_pad_force_filtered = 0.0;
            this.right_finger_pad_force_filtered = 0.0;
            this.left_finger_pad_forces = new double[22];
            this.right_finger_pad_forces = new double[22];
            this.left_finger_pad_forces_filtered = new double[22];
            this.right_finger_pad_forces_filtered = new double[22];
            this.acc_x_raw = 0.0;
            this.acc_y_raw = 0.0;
            this.acc_z_raw = 0.0;
            this.acc_x_filtered = 0.0;
            this.acc_y_filtered = 0.0;
            this.acc_z_filtered = 0.0;
            this.left_contact = false;
            this.right_contact = false;
        }

        public PR2GripperSensorRawData(Time stamp, double left_finger_pad_force, double right_finger_pad_force, double left_finger_pad_force_filtered, double right_finger_pad_force_filtered, double[] left_finger_pad_forces, double[] right_finger_pad_forces, double[] left_finger_pad_forces_filtered, double[] right_finger_pad_forces_filtered, double acc_x_raw, double acc_y_raw, double acc_z_raw, double acc_x_filtered, double acc_y_filtered, double acc_z_filtered, bool left_contact, bool right_contact)
        {
            this.stamp = stamp;
            this.left_finger_pad_force = left_finger_pad_force;
            this.right_finger_pad_force = right_finger_pad_force;
            this.left_finger_pad_force_filtered = left_finger_pad_force_filtered;
            this.right_finger_pad_force_filtered = right_finger_pad_force_filtered;
            this.left_finger_pad_forces = left_finger_pad_forces;
            this.right_finger_pad_forces = right_finger_pad_forces;
            this.left_finger_pad_forces_filtered = left_finger_pad_forces_filtered;
            this.right_finger_pad_forces_filtered = right_finger_pad_forces_filtered;
            this.acc_x_raw = acc_x_raw;
            this.acc_y_raw = acc_y_raw;
            this.acc_z_raw = acc_z_raw;
            this.acc_x_filtered = acc_x_filtered;
            this.acc_y_filtered = acc_y_filtered;
            this.acc_z_filtered = acc_z_filtered;
            this.left_contact = left_contact;
            this.right_contact = right_contact;
        }
    }
}
